# Scaffolding generated by Casein v5.1.1.3

module Casein
  class SettingsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Settings'
  		@settings = Setting.order(sort_order(:key)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View setting'
      @setting = Setting.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new setting'
    	@setting = Setting.new
    end

    def create
      @setting = Setting.new setting_params
    
      if @setting.save
        flash[:notice] = 'Setting created'
        redirect_to casein_settings_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new setting'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update setting'
      
      @setting = Setting.find params[:id]
    
      if @setting.update_attributes setting_params
        flash[:notice] = 'Setting has been updated'
        redirect_to casein_settings_path
      else
        flash.now[:warning] = 'There were problems when trying to update this setting'
        render :action => :show
      end
    end
 
    def destroy
      @setting = Setting.find params[:id]

      @setting.destroy
      flash[:notice] = 'Setting has been deleted'
      redirect_to casein_settings_path
    end
  
    private
      
      def setting_params
        params.require(:setting).permit(:key, :value, :image)
      end

  end
end